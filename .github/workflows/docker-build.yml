name: Docker build and publish and optional kubernetes deploy
on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-repo-name:
        required: false
        type: string
        default: "ops"
      python-version:
        default: "3.11"
        required: false
        type: string
    secrets:
      GOOGLE_AUTHENTICATION_CREDENTIALS_JSON:
        description: "Google Cloud Platform service-agent JSON credentials for accessing our Artifact Repository and installing private packages."
        required: false
      GCP_PROJECT:
        description: "Google Cloud Platform project id."
        required: true
env:
  # Setting an environment variable with the value of a configuration variable
  cluster_zone: ${{ vars.GKE_CLUSTER_ZONE }}
  cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
  deployment_name: ${{ vars.GKE_DEPLOYMENT_NAME }}
  full_image_uri: europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ inputs.image-repo-name }}/${{ inputs.image-name }}
jobs:
  docker_build:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_AUTHENTICATION_CREDENTIALS_JSON }}
      - name: Authorize Docker push
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev
      - name: Build builder image
        run: >-
          docker build
          --build-arg BUILDKIT_INLINE_CACHE=1
          -f Dockerfile
          --cache-from ${{ env.full_image_uri }}-builder:latest
          -t ${{ env.full_image_uri }}-builder:latest
          --target builder
          .
      - name: Build runtime image
        run: >-
          docker build
          --build-arg BUILDKIT_INLINE_CACHE=1
          -f Dockerfile
          --cache-from ${{ env.full_image_uri }}:latest
          -t ${{ env.full_image_uri }}:latest
          -t ${{ env.full_image_uri }}:${{ github.sha }}
          .
  kubernetes_deploy:
    runs-on: ubuntu-latest
    needs: [docker_build]
    if: |
      deployment_name != ''
      && cluster_name != ''
      && cluster_zone != ''
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_AUTHENTICATION_CREDENTIALS_JSON }}
      - uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.cluster_name }}
          location: ${{ env.cluster_zone }}
      - name: Update kubernetes image
        run: kubectl set-image deployment/${{ env.deployment_name }} ${{ env.full_image_uri }}:${{ github.sha }}
