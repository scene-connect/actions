# Simple workflow to check that the poetry version has been updated.
# This should be run early in the CI workflow to avoid wasting time running
# lint/tests/etc multiple times.
name: Poetry package version check
on:
  workflow_call:
    inputs:
      repository:
        default: "zuos-python-repo"
        required: false
        type: string
      location:
        default: "europe-north1"
        required: false
        type: string
    secrets:
      GOOGLE_AUTHENTICATION_CREDENTIALS_JSON:
        description: "Google Cloud Platform service-agent JSON credentials for accessing our Artifact Repository and installing private packages."
        required: false

jobs:
  versions:
    # Gets the package version from the base and head branches.
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request'
      && github.actor != 'dependabot[bot]'
    outputs:
      version-base: ${{ steps.version-base.outputs.version }}
      version-head: ${{ steps.version-head.outputs.version }}
      package-name: ${{ steps.package-name.outputs.package-name }}
    steps:
      - uses: actions/setup-python@v5
      - uses: abatilo/actions-poetry@v3
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
      - name: Get base package version
        id: version-base
        run: echo "version=`poetry version --short --no-interaction`" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Get head package version
        id: version-head
        run: echo "version=`poetry version --short --no-interaction`" >> $GITHUB_OUTPUT
      - name: Output package name
        id: package-name
        run: echo "package-name=`poetry version --no-interaction | grep -Po '^([\w-]+)(?=\s+.*)'`" >> $GITHUB_OUTPUT

  version-check:
    name: Version check
    needs: [versions]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
      - run: pip install packaging
      - name: Head poetry version newer than base
        run: python -c "from packaging import version;import sys;sys.exit( 0 if version.parse('${{ needs.versions.outputs.version-head }}') > version.parse('${{ needs.versions.outputs.version-base }}') else 1)"

  version-check-git-tag:
    name: Version check - git tag
    runs-on: ubuntu-latest
    needs: [versions]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Check for existing tag
        run: |
          TAG="${{ needs.versions.outputs.version-head }}"
          if [ $(git tag -l "${TAG}") ]; then
            echo "Tag already exists: ${TAG}"
            exit 1
          else
            echo "Tag does not exists: ${TAG}"
          fi

  version-check-repo:
    name: Version check - package repo
    runs-on: ubuntu-latest
    needs: [versions]
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        env:
          GOOGLE_AUTHENTICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_AUTHENTICATION_CREDENTIALS_JSON }}
        if: ${{ env.GOOGLE_AUTHENTICATION_CREDENTIALS_JSON != '' }}
        with:
          credentials_json: ${{ secrets.GOOGLE_AUTHENTICATION_CREDENTIALS_JSON }}
      - name: Head version not published yet
        run: |
          gcloud artifacts versions list \
              --package=${{ needs.versions.outputs.package-name }} \
              --repository=${{ inputs.repository }} \
              --location=${{ inputs.location }} \
          | grep -q ${{ needs.versions.outputs.version-head }} \
          && echo "exists=1" >> $GITHUB_OUTPUT \
          || echo "exists=0" >> $GITHUB_OUTPUT
